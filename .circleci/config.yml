# version: 2.1
# orbs:
#   aws-s3: circleci/aws-s3@4.0.0
# jobs:
#   build:
#     docker:
#       - image: circleci/python:2.7-node
#     environment:
#       AWS_REGION: us-east-1
#     steps:
#       - checkout
#       - run: npm install
#       - run: npm run build
#       - aws-s3/sync:
#           from: dist
#           to: 's3://demo-ci-cd-article/'
#           arguments: |
#             --acl public-read \
#             --cache-control "max-age=86400" \
#           overwrite: true
# workflows:
#   version: 2.1
#   build:
#     jobs:
#       - build:
#           filters:
#             branches:
#               only: master

version: 2.1

orbs:
  aws-s3: circleci/aws-s3@3.1.1 # use the AWS S3 orb in your configuration

workflows: # Define a Workflow running the build job, then the deploy job
  build-deploy: # Make a workflow to build and deploy your project
    jobs:
      - build
      - deploy:
          requires:
            - build # Only run deploy job once the build job has completed
          filters:
            branches:
              only: master # Only deploy when the commit is on the Main branch

jobs: # Define the build and deploy jobs
  build:
    docker: # Use the Docker executor for the build job
      - image: cimg/node:20.5.1 # Specify the Docker image to use for the build job
    steps:
      - checkout
      - run: npm install
      - run: npm run build
      - aws-s3/sync:
          from: dist
          to: 's3://demo-ci-cd-article/'
          arguments: |
            --acl public-read \
            --cache-control "max-age=86400" \
  deploy:
    docker: # Use the Docker executor for the deploy job
      - image: cimg/node:20.5.1 # Specify the Docker image to use for the deploy job
    steps:
      - checkout
      - aws-s3/sync:
          from: bucket
          to: 's3://demo-ci-cd-article/'
          arguments: | # Optional arguments
            --acl public-read \
            --cache-control "max-age=86400"
